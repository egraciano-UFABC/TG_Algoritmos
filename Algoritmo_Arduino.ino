const int N = 430;          // Número de amostras
const float sampleFreq = 430.0; // Frequência de amostragem em Hz
const float f = 10.0;        // Frequência do sinal em Hz
const float Aa = 1.0;         // Amplitude da primeira senoide
const float phi = PI / 4 ;   // Fase da primeira senoide (π/4)
const float phi1 = PI / 4 ;  // Fase da segunda senoide (π/2)
const float Ab = 0.5;        // Amplitude da segunda senoide
int Real[] = {869, 839, 810, 792, 777, 753, 710, 682, 871, 843, 814, 798, 782, 757, 716, 686, 876, 845, 817, 802, 786, 761, 714, 689, 841, 805, 767, 743, 717, 668, 613, 568, 839, 804, 767, 739, 713, 666, 611, 567, 832, 800, 766, 738, 710, 664, 613, 570, 615, 591, 566, 552, 538, 514, 482, 450, 616, 592, 566, 552, 540, 516, 482, 451, 615, 592, 568, 552, 541, 517, 485, 451, 1080, 997, 932, 900, 867, 800, 717, 644, 1112, 1028, 959, 928, 885, 819, 730, 656, 1125, 1040, 970, 940, 900, 828, 742, 662, 1800, 1707, 1600, 1536, 1468, 1346, 1193, 1057, 1789, 1695, 1577, 1521, 1448, 1327, 1186, 1050, 1770, 1673, 1567, 1505, 1437, 1319, 1177, 1049, 1119, 1095, 1062, 1034, 1001, 943, 868, 822, 1130, 1110, 1067, 1042, 1006, 947, 872, 831, 1138, 1112, 1075, 1051, 1015, 954, 871, 836, 814, 811, 801, 792, 777, 740, 682, 635, 840, 824, 806, 794, 776, 740, 681, 636, 840, 825, 807, 792, 776, 737, 681, 630, 780, 767, 746, 735, 711, 675, 622, 579, 767, 760, 743, 728, 711, 672, 620, 575, 763, 755, 740, 727, 710, 672, 619, 578, 992, 975, 948, 925, 895, 843, 772, 708, 1002, 984, 953, 929, 901, 850, 776, 710, 1012, 989, 958, 938, 905, 852, 778, 715, 964, 936, 905, 884, 859, 820, 757, 711, 968, 942, 906, 885, 862, 823, 756, 711, 970, 942, 907, 889, 864, 824, 758, 712, 1233, 1209, 1174, 1155, 1125, 1074, 997, 945, 1236, 1212, 1176, 1155, 1127, 1078, 999, 951, 1236, 1215, 1180, 1159, 1133, 1082, 1010, 955, 628, 613, 601, 594, 591, 572, 540, 513, 651, 636, 625, 617, 610, 589, 554, 525, 662, 647, 632, 623, 614, 592, 557, 528, 618, 604, 584, 575, 564, 537, 501, 470, 625, 607, 588, 577, 567, 542, 508, 473, 626, 610, 591, 580, 570, 545, 508, 477, 951, 936, 911, 897, 879, 850, 797, 746, 968, 949, 925, 909, 893, 860, 803, 757, 969, 957, 939, 922, 901, 870, 819, 763, 935, 913, 885, 871, 852, 818, 766, 733, 935, 915, 886, 868, 850, 817, 767, 732, 936, 912, 886, 867, 852, 819, 771, 732, 564, 538, 512, 500, 488, 468, 443, 417, 559, 532, 508, 496, 488, 466, 440, 416, 556, 531, 506, 495, 486, 464, 437, 416, 429, 411, 398, 393, 390, 381, 361, 338, 443, 429, 413, 408, 404, 393, 376, 350, 456, 440, 423, 418, 415, 404, 385, 359, 542, 519, 486, 469, 460, 439, 408, 370, 548, 525, 487, 470, 462, 440, 409, 373, 553, 524, 491, 471, 464, 442};
int Imaginario[] = {-70, -59, -46, -41, -36, -32, -19, 26, -68, -59, -45, -39, -38, -34, -19, 27, -72, -59, -44, -39, -37, -32, -14, 28, -69, -69, -62, -61, -69, -72, -65, -34, -67, -69, -63, -62, -69, -71, -66, -35, -73, -72, -64, -65, -67, -69, -60, -33, -47, -47, -42, -39, -40, -42, -51, -46, -49, -46, -42, -37, -39, -41, -50, -46, -48, -47, -41, -38, -39, -42, -52, -46, -192, -156, -113, -103, -108, -122, -117, -98, -190, -160, -114, -102, -109, -126, -130, -98, -188, -155, -112, -103, -111, -128, -126, -97, -174, -177, -154, -144, -158, -178, -125, -40, -178, -182, -158, -150, -160, -176, -126, -45, -172, -179, -155, -147, -157, -172, -121, -44, -53, -59, -62, -68, -75, -61, -28, 54, -49, -60, -65, -65, -73, -69, -24, 55, -51, -63, -59, -62, -72, -66, -29, 57, -21, -25, -29, -35, -49, -61, -62, -40, -29, -30, -35, -39, -50, -62, -63, -37, -33, -35, -35, -39, -48, -64, -66, -35, -17, -26, -31, -40, -50, -64, -68, -51, -14, -23, -30, -38, -52, -63, -68, -51, -14, -20, -31, -39, -49, -63, -68, -51, -37, -43, -53, -61, -72, -91, -92, -68, -36, -46, -54, -61, -74, -93, -89, -72, -33, -46, -54, -61, -79, -94, -94, -72, -54, -60, -51, -52, -58, -64, -52, -6, -52, -58, -52, -54, -58, -62, -53, -7, -50, -55, -53, -52, -58, -62, -51, -9, -51, -55, -53, -53, -57, -45, 5, 104, -54, -56, -52, -49, -56, -49, 7, 106, -56, -51, -49, -53, -57, -39, 11, 111, -31, -31, -27, -25, -27, -35, -37, -27, -32, -31, -26, -25, -29, -37, -43, -25, -34, -33, -28, -27, -31, -35, -38, -27, -35, -35, -32, -32, -37, -45, -58, -48, -36, -36, -32, -33, -37, -45, -57, -49, -35, -35, -31, -31, -37, -45, -53, -49, -37, -40, -45, -41, -48, -64, -71, -66, -33, -38, -39, -42, -53, -66, -73, -65, -27, -34, -36, -42, -48, -65, -74, -63, -42, -44, -39, -42, -46, -44, -31, 16, -37, -44, -43, -39, -43, -46, -31, 12, -40, -46, -39, -39, -42, -43, -28, 14, -54, -48, -38, -31, -31, -31, -35, -22, -54, -47, -37, -31, -31, -30, -32, -22, -52, -49, -37, -32, -31, -31, -33, -23, -40, -36, -27, -23, -21, -26, -37, -47, -39, -35, -27, -22, -25, -27, -41, -47, -39, -34, -28, -22, -21, -26, -41, -47, -41, -48, -46, -39, -38, -45, -61, -67, -42, -49, -47, -39, -37, -45, -60, -67, -46, -53, -48, -40, -38, -45};


void setup() {
  Serial.begin(9600);
}

void loop() {
  
  for (int i = 0; i < 430; i++) { // usar o tamanho real do vetor
    float t = (float)i / sampleFreq;
    float y  = Aa  * sin(2 * PI * f * t + phi);
    float y1 = Ab * sin(2 * PI * f * t + phi1);

    Serial.print(Real[i]);
    Serial.print(",");
    Serial.print(Imaginario[i]);
    Serial.print(",");
    Serial.print(y);
    Serial.print(",");
    Serial.println(y1);

    delayMicroseconds(100 / sampleFreq);
  }
}
